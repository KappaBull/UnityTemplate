name: ClientBuild

on: 
  push:
    branches:
      - "master"
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
      - ".github/workflows/ClientBuild.yml"
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      workflow_mode:
        description: '[release] [Android, iOS, StandaloneWindows64, StandaloneOSX]'
        required: false
        default: ''
jobs:
  buildWithLinux:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - iOS # Build an iOS player.
          - Android # Build an Android .apk.
          - StandaloneLinux64
          - WebGL
    steps:
      - name: Free Disk Space for Android
        if: matrix.targetPlatform == 'Android'
        run: |
          df -h
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-build-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-build-${{ matrix.targetPlatform }}-
            Library-build-
      - uses: game-ci/unity-builder@v2.0.2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2020 }}
          # UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }} 
          # UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }} 
          # UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: BuildCI.BuildClientCMD
          # customParameters: -exportPath Build-${{ matrix.targetPlatform }}
      - name: check dir
        run: ls -la
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: Build-${{ matrix.targetPlatform }}
          retention-days: 14
  buildWithWindows:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows
          - StandaloneWindows64
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-build-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-build-${{ matrix.targetPlatform }}-
            Library-build-
      - name: Build Unity Project
        id: build
        uses: game-ci/unity-builder@2b399b264151108d3f2a94087614b867931669d3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2020 }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }} 
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }} 
          # UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: BuildCI.BuildClientCMD
          # customParameters: -exportPath Build-${{ matrix.targetPlatform }}
      - name: check dir
        run: ls -la
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: Build-${{ matrix.targetPlatform }}
          retention-days: 14
  buildWithMac:    
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-build-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-build-${{ matrix.targetPlatform }}-
            Library-build-
      - name: Build Unity Project
        id: build
        uses: game-ci/unity-builder@2b399b264151108d3f2a94087614b867931669d3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2020 }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }} 
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }} 
          # UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: BuildCI.BuildClientCMD
          # customParameters: -exportPath Build-${{ matrix.targetPlatform }}
      - name: check dir
        run: ls
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: Build-${{ matrix.targetPlatform }}
          retention-days: 14